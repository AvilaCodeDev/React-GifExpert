{"version":3,"sources":["components/CategoryAdd.js","components/Helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","value","target","firstChild","trim","length","cats","type","onChange","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","categorie","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,cAAqB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAkB/C,OACI,sBAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,WAAWF,MAE9BL,EAAWQ,OAAOC,OAAS,IAC3BX,GAAe,SAAAY,GAAI,OAAKL,GAAL,mBAAeK,OAClCT,EAAc,MAMlB,SACI,uBACIU,KAAO,OACPN,MAAUL,EACVY,SApBc,SAAET,GACxBF,EAAeE,EAAEG,OAAOD,a,+BCPnBQ,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACPC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEhC,OACI,qBAAKc,UAAU,yCAAf,SACI,qBAAKC,IAAQf,EAAMgB,IAAQN,OCF1BO,EAAU,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,UAAiB,ECDhB,SAAEpB,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAO,GACPc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACNzB,EAASC,GACJyB,MAAM,SAAAC,GACCH,EAAS,CACThB,KAAMmB,EACNL,SAAS,SAGtB,CAACrB,IAEGsB,EDbwBK,CAAcP,GAAlCP,EAH6B,EAGlCN,KAAac,EAHqB,EAGrBA,QAEnB,OACE,qCACE,mCAAOD,EAAP,OACEC,GAAW,mBAAGL,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAK,SAAAmB,GAAK,OACf,cAAC,EAAD,eAEMA,GADIA,EAAMjB,aEbnBkB,EAAe,WAAO,IAAD,EACM5C,mBAAS,CAAC,SADhB,mBACvB6C,EADuB,KACX9C,EADW,KAG9B,OACI,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,uBAEA,6BAEQ8C,EAAWrB,KAAK,SAACW,GAAD,OACV,cAAC,EAAD,CAEIA,UAAcA,GADNA,Y,MCZpCW,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9415aba8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ( {setCategories } ) => {\r\n    const [InputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        const value = e.target.firstChild.value;\r\n\r\n         if(InputValue.trim().length > 2){\r\n            setCategories( cats => [value, ...cats ]);\r\n            setInputValue('');\r\n         }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value = { InputValue }\r\n                onChange = { handleInputChange  }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const GetGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=m6CrSJDFgMnun5I8fq0mItZSMg9JGk4W`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n        id : img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }})\r\n    \r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( {title,url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src = { url } alt = { title }/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { categorie } ) => {\r\n  \r\n  \r\n  const { data:images, loading } = useFetchGifs( categorie );   \r\n\r\n    return (\r\n      <>\r\n        <h3> { categorie } </h3>  \r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n        <div className=\"card-grid\">\r\n            {\r\n              images.map( image => (\r\n                <GifGridItem \r\n                  key = { image.id }\r\n                  {...image}\r\n                />\r\n              ) )\r\n            }\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { GetGifs } from '../components/Helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        GetGifs( category )\r\n            .then( imgs => {\r\n                    setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n    }, [category]);\r\n  \r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Halo']);\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n\r\n          <CategoryAdd setCategories = { setCategories } />\r\n\r\n          <hr/>\r\n\r\n          <ol>\r\n              {\r\n                  categories.map( (categorie) => (\r\n                        <GifGrid \r\n                            key = { categorie }\r\n                            categorie = { categorie} \r\n                        />\r\n                    )\r\n                  )\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}